"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-responsive-modal";
exports.ids = ["vendor-chunks/react-responsive-modal"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-responsive-modal/dist/react-responsive-modal.esm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/react-responsive-modal/dist/react-responsive-modal.esm.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Modal: () => (/* binding */ Modal),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"(ssr)/./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var body_scroll_lock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! body-scroll-lock */ \"(ssr)/./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js\");\n/* harmony import */ var _bedrock_layout_use_forwarded_ref__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bedrock-layout/use-forwarded-ref */ \"(ssr)/./node_modules/@bedrock-layout/use-forwarded-ref/lib/index.m.js\");\n\n\n\n\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nvar CloseIcon = function CloseIcon(_ref) {\n    var classes = _ref.classes, classNames = _ref.classNames, styles = _ref.styles, id = _ref.id, closeIcon = _ref.closeIcon, onClick = _ref.onClick;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n        id: id,\n        className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(classes.closeButton, classNames == null ? void 0 : classNames.closeButton),\n        style: styles == null ? void 0 : styles.closeButton,\n        onClick: onClick,\n        \"data-testid\": \"close-button\"\n    }, closeIcon ? closeIcon : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        className: classNames == null ? void 0 : classNames.closeIcon,\n        style: styles == null ? void 0 : styles.closeIcon,\n        width: 28,\n        height: 28,\n        viewBox: \"0 0 36 36\",\n        \"data-testid\": \"close-icon\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n        d: \"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\"\n    })));\n};\nvar isBrowser = \"undefined\" !== \"undefined\";\n// https://github.com/alexandrzavalii/focus-trap-js/blob/master/src/index.js v1.1.0\nvar candidateSelectors = [\n    \"input\",\n    \"select\",\n    \"textarea\",\n    \"a[href]\",\n    \"button\",\n    \"[tabindex]\",\n    \"audio[controls]\",\n    \"video[controls]\",\n    '[contenteditable]:not([contenteditable=\"false\"])'\n];\nfunction isHidden(node) {\n    // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,\n    // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.\n    return node.offsetParent === null || getComputedStyle(node).visibility === \"hidden\";\n}\nfunction getCheckedRadio(nodes, form) {\n    for(var i = 0; i < nodes.length; i++){\n        if (nodes[i].checked && nodes[i].form === form) {\n            return nodes[i];\n        }\n    }\n}\nfunction isNotRadioOrTabbableRadio(node) {\n    if (node.tagName !== \"INPUT\" || node.type !== \"radio\" || !node.name) {\n        return true;\n    }\n    var radioScope = node.form || node.ownerDocument;\n    var radioSet = radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n    var checked = getCheckedRadio(radioSet, node.form);\n    return checked === node || checked === undefined && radioSet[0] === node;\n}\nfunction getAllTabbingElements(parentElem) {\n    var currentActiveElement = document.activeElement;\n    var tabbableNodes = parentElem.querySelectorAll(candidateSelectors.join(\",\"));\n    var onlyTabbable = [];\n    for(var i = 0; i < tabbableNodes.length; i++){\n        var node = tabbableNodes[i];\n        if (currentActiveElement === node || !node.disabled && getTabindex(node) > -1 && !isHidden(node) && isNotRadioOrTabbableRadio(node)) {\n            onlyTabbable.push(node);\n        }\n    }\n    return onlyTabbable;\n}\nfunction tabTrappingKey(event, parentElem) {\n    // check if current event keyCode is tab\n    if (!event || event.key !== \"Tab\") return;\n    if (!parentElem || !parentElem.contains) {\n        if (process && \"development\" === \"development\") {\n            console.warn(\"focus-trap-js: parent element is not defined\");\n        }\n        return false;\n    }\n    if (!parentElem.contains(event.target)) {\n        return false;\n    }\n    var allTabbingElements = getAllTabbingElements(parentElem);\n    var firstFocusableElement = allTabbingElements[0];\n    var lastFocusableElement = allTabbingElements[allTabbingElements.length - 1];\n    if (event.shiftKey && event.target === firstFocusableElement) {\n        lastFocusableElement.focus();\n        event.preventDefault();\n        return true;\n    } else if (!event.shiftKey && event.target === lastFocusableElement) {\n        firstFocusableElement.focus();\n        event.preventDefault();\n        return true;\n    }\n    return false;\n}\nfunction getTabindex(node) {\n    var tabindexAttr = parseInt(node.getAttribute(\"tabindex\"), 10);\n    if (!isNaN(tabindexAttr)) return tabindexAttr; // Browsers do not return tabIndex correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (isContentEditable(node)) return 0;\n    return node.tabIndex;\n}\nfunction isContentEditable(node) {\n    return node.getAttribute(\"contentEditable\");\n}\nvar FocusTrap = function FocusTrap(_ref) {\n    var container = _ref.container, initialFocusRef = _ref.initialFocusRef;\n    var refLastFocus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    /**\r\n   * Handle focus lock on the modal\r\n   */ (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        var handleKeyEvent = function handleKeyEvent(event) {\n            if (container == null ? void 0 : container.current) {\n                tabTrappingKey(event, container.current);\n            }\n        };\n        if (isBrowser) {\n            document.addEventListener(\"keydown\", handleKeyEvent);\n        } // On mount we focus on the first focusable element in the modal if there is one\n        if (isBrowser && (container == null ? void 0 : container.current)) {\n            var savePreviousFocus = function savePreviousFocus() {\n                // First we save the last focused element\n                // only if it's a focusable element\n                if (candidateSelectors.findIndex(function(selector) {\n                    var _document$activeEleme;\n                    return (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.matches(selector);\n                }) !== -1) {\n                    refLastFocus.current = document.activeElement;\n                }\n            };\n            if (initialFocusRef) {\n                savePreviousFocus(); // We need to schedule focusing on a next frame - this allows to focus on the modal root\n                requestAnimationFrame(function() {\n                    var _initialFocusRef$curr;\n                    (_initialFocusRef$curr = initialFocusRef.current) == null ? void 0 : _initialFocusRef$curr.focus();\n                });\n            } else {\n                var allTabbingElements = getAllTabbingElements(container.current);\n                if (allTabbingElements[0]) {\n                    savePreviousFocus();\n                    allTabbingElements[0].focus();\n                }\n            }\n        }\n        return function() {\n            if (isBrowser) {\n                var _refLastFocus$current;\n                document.removeEventListener(\"keydown\", handleKeyEvent); // On unmount we restore the focus to the last focused element\n                (_refLastFocus$current = refLastFocus.current) == null ? void 0 : _refLastFocus$current.focus();\n            }\n        };\n    }, [\n        container,\n        initialFocusRef\n    ]);\n    return null;\n};\nvar modals = [];\n/**\r\n * Handle the order of the modals.\r\n * Inspired by the material-ui implementation.\r\n */ var modalManager = {\n    /**\r\n   * Register a new modal\r\n   */ add: function add(newModal) {\n        modals.push(newModal);\n    },\n    /**\r\n   * Remove a modal\r\n   */ remove: function remove(oldModal) {\n        modals = modals.filter(function(modal) {\n            return modal !== oldModal;\n        });\n    },\n    /**\r\n   * When multiple modals are rendered will return true if current modal is the last one\r\n   */ isTopModal: function isTopModal(modal) {\n        return !!modals.length && modals[modals.length - 1] === modal;\n    }\n};\nfunction useModalManager(ref, open) {\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (open) {\n            modalManager.add(ref);\n        }\n        return function() {\n            modalManager.remove(ref);\n        };\n    }, [\n        open,\n        ref\n    ]);\n}\nvar useScrollLock = function useScrollLock(refModal, open, showPortal, blockScroll, reserveScrollBarGap) {\n    var oldRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (open && refModal.current && blockScroll) {\n            oldRef.current = refModal.current;\n            (0,body_scroll_lock__WEBPACK_IMPORTED_MODULE_3__.disableBodyScroll)(refModal.current, {\n                reserveScrollBarGap: reserveScrollBarGap\n            });\n        }\n        return function() {\n            if (oldRef.current) {\n                (0,body_scroll_lock__WEBPACK_IMPORTED_MODULE_3__.enableBodyScroll)(oldRef.current);\n                oldRef.current = null;\n            }\n        };\n    }, [\n        open,\n        showPortal,\n        refModal,\n        blockScroll,\n        reserveScrollBarGap\n    ]);\n};\nvar classes = {\n    root: \"react-responsive-modal-root\",\n    overlay: \"react-responsive-modal-overlay\",\n    overlayAnimationIn: \"react-responsive-modal-overlay-in\",\n    overlayAnimationOut: \"react-responsive-modal-overlay-out\",\n    modalContainer: \"react-responsive-modal-container\",\n    modalContainerCenter: \"react-responsive-modal-containerCenter\",\n    modal: \"react-responsive-modal-modal\",\n    modalAnimationIn: \"react-responsive-modal-modal-in\",\n    modalAnimationOut: \"react-responsive-modal-modal-out\",\n    closeButton: \"react-responsive-modal-closeButton\"\n};\nvar Modal = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function(_ref, ref) {\n    var _classNames$overlayAn, _classNames$overlayAn2, _classNames$modalAnim, _classNames$modalAnim2;\n    var open = _ref.open, center = _ref.center, _ref$blockScroll = _ref.blockScroll, blockScroll = _ref$blockScroll === void 0 ? true : _ref$blockScroll, _ref$closeOnEsc = _ref.closeOnEsc, closeOnEsc = _ref$closeOnEsc === void 0 ? true : _ref$closeOnEsc, _ref$closeOnOverlayCl = _ref.closeOnOverlayClick, closeOnOverlayClick = _ref$closeOnOverlayCl === void 0 ? true : _ref$closeOnOverlayCl, container = _ref.container, _ref$showCloseIcon = _ref.showCloseIcon, showCloseIcon = _ref$showCloseIcon === void 0 ? true : _ref$showCloseIcon, closeIconId = _ref.closeIconId, closeIcon = _ref.closeIcon, _ref$focusTrapped = _ref.focusTrapped, focusTrapped = _ref$focusTrapped === void 0 ? true : _ref$focusTrapped, _ref$initialFocusRef = _ref.initialFocusRef, initialFocusRef = _ref$initialFocusRef === void 0 ? undefined : _ref$initialFocusRef, _ref$animationDuratio = _ref.animationDuration, animationDuration = _ref$animationDuratio === void 0 ? 300 : _ref$animationDuratio, classNames = _ref.classNames, styles = _ref.styles, _ref$role = _ref.role, role = _ref$role === void 0 ? \"dialog\" : _ref$role, ariaDescribedby = _ref.ariaDescribedby, ariaLabelledby = _ref.ariaLabelledby, containerId = _ref.containerId, modalId = _ref.modalId, onClose = _ref.onClose, onEscKeyDown = _ref.onEscKeyDown, onOverlayClick = _ref.onOverlayClick, onAnimationEnd = _ref.onAnimationEnd, children = _ref.children, reserveScrollBarGap = _ref.reserveScrollBarGap;\n    var refDialog = (0,_bedrock_layout_use_forwarded_ref__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(ref);\n    var refModal = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var refShouldClose = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var refContainer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null); // Lazily create the ref instance\n    // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n    if (refContainer.current === null && isBrowser) {\n        refContainer.current = document.createElement(\"div\");\n    } // The value should be false for srr, that way when the component is hydrated client side,\n    // it will match the server rendered content\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), showPortal = _useState[0], setShowPortal = _useState[1]; // Hook used to manage multiple modals opened at the same time\n    useModalManager(refModal, open); // Hook used to manage the scroll\n    useScrollLock(refModal, open, showPortal, blockScroll, reserveScrollBarGap);\n    var handleOpen = function handleOpen() {\n        if (refContainer.current && !container && !document.body.contains(refContainer.current)) {\n            document.body.appendChild(refContainer.current);\n        }\n        document.addEventListener(\"keydown\", handleKeydown);\n    };\n    var handleClose = function handleClose() {\n        if (refContainer.current && !container && document.body.contains(refContainer.current)) {\n            document.body.removeChild(refContainer.current);\n        }\n        document.removeEventListener(\"keydown\", handleKeydown);\n    };\n    var handleKeydown = function handleKeydown(event) {\n        // Only the last modal need to be escaped when pressing the esc key\n        if (event.keyCode !== 27 || !modalManager.isTopModal(refModal)) {\n            return;\n        }\n        onEscKeyDown == null ? void 0 : onEscKeyDown(event);\n        if (closeOnEsc) {\n            onClose();\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        return function() {\n            if (showPortal) {\n                // When the modal is closed or removed directly, cleanup the listeners\n                handleClose();\n            }\n        };\n    }, [\n        showPortal\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        // If the open prop is changing, we need to open the modal\n        // This is also called on the first render if the open prop is true when the modal is created\n        if (open && !showPortal) {\n            setShowPortal(true);\n            handleOpen();\n        }\n    }, [\n        open\n    ]);\n    var handleClickOverlay = function handleClickOverlay(event) {\n        if (refShouldClose.current === null) {\n            refShouldClose.current = true;\n        }\n        if (!refShouldClose.current) {\n            refShouldClose.current = null;\n            return;\n        }\n        onOverlayClick == null ? void 0 : onOverlayClick(event);\n        if (closeOnOverlayClick) {\n            onClose();\n        }\n        refShouldClose.current = null;\n    };\n    var handleModalEvent = function handleModalEvent() {\n        refShouldClose.current = false;\n    };\n    var handleAnimationEnd = function handleAnimationEnd() {\n        if (!open) {\n            setShowPortal(false);\n        }\n        onAnimationEnd == null ? void 0 : onAnimationEnd();\n    };\n    var containerModal = container || refContainer.current;\n    var overlayAnimation = open ? (_classNames$overlayAn = classNames == null ? void 0 : classNames.overlayAnimationIn) != null ? _classNames$overlayAn : classes.overlayAnimationIn : (_classNames$overlayAn2 = classNames == null ? void 0 : classNames.overlayAnimationOut) != null ? _classNames$overlayAn2 : classes.overlayAnimationOut;\n    var modalAnimation = open ? (_classNames$modalAnim = classNames == null ? void 0 : classNames.modalAnimationIn) != null ? _classNames$modalAnim : classes.modalAnimationIn : (_classNames$modalAnim2 = classNames == null ? void 0 : classNames.modalAnimationOut) != null ? _classNames$modalAnim2 : classes.modalAnimationOut;\n    return showPortal && containerModal ? /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_1___default().createPortal(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(classes.root, classNames == null ? void 0 : classNames.root),\n        style: styles == null ? void 0 : styles.root,\n        \"data-testid\": \"root\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(classes.overlay, classNames == null ? void 0 : classNames.overlay),\n        \"data-testid\": \"overlay\",\n        \"aria-hidden\": true,\n        style: _extends({\n            animation: overlayAnimation + \" \" + animationDuration + \"ms\"\n        }, styles == null ? void 0 : styles.overlay)\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: refModal,\n        id: containerId,\n        className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(classes.modalContainer, center && classes.modalContainerCenter, classNames == null ? void 0 : classNames.modalContainer),\n        style: styles == null ? void 0 : styles.modalContainer,\n        \"data-testid\": \"modal-container\",\n        onClick: handleClickOverlay\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: refDialog,\n        className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(classes.modal, classNames == null ? void 0 : classNames.modal),\n        style: _extends({\n            animation: modalAnimation + \" \" + animationDuration + \"ms\"\n        }, styles == null ? void 0 : styles.modal),\n        onMouseDown: handleModalEvent,\n        onMouseUp: handleModalEvent,\n        onClick: handleModalEvent,\n        onAnimationEnd: handleAnimationEnd,\n        id: modalId,\n        role: role,\n        \"aria-modal\": \"true\",\n        \"aria-labelledby\": ariaLabelledby,\n        \"aria-describedby\": ariaDescribedby,\n        \"data-testid\": \"modal\",\n        tabIndex: -1\n    }, focusTrapped && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FocusTrap, {\n        container: refDialog,\n        initialFocusRef: initialFocusRef\n    }), children, showCloseIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CloseIcon, {\n        classes: classes,\n        classNames: classNames,\n        styles: styles,\n        closeIcon: closeIcon,\n        onClick: onClose,\n        id: closeIconId\n    })))), containerModal) : null;\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Modal);\n //# sourceMappingURL=react-responsive-modal.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-responsive-modal/dist/react-responsive-modal.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-responsive-modal/styles.css":
/*!********************************************************!*\
  !*** ./node_modules/react-responsive-modal/styles.css ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"b27d813d2420\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVzcG9uc2l2ZS1tb2RhbC9zdHlsZXMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVlbC1oYXJ2ZXN0ZXIvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVzcG9uc2l2ZS1tb2RhbC9zdHlsZXMuY3NzPzNiOTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJiMjdkODEzZDI0MjBcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-responsive-modal/styles.css\n");

/***/ })

};
;